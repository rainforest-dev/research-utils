name: Create Release
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  autorelease:
    name: Create Release
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Check pyproject.toml validity
        run: poetry check --no-interaction
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.venv
          key: ${{ matrix.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ matrix.os }}-
      - name: Install dependencies
        if: steps.cache-dependencies.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
      - name: Run tests
        run: poetry run pytest -v
      - name: Build artifacts
        run: poetry build
      - name: Release Notes
        run: git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
      - name: Create Release Draft
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: true
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
